program intDiv()
global
	proc divide(copy m:int64, copy n:int64, ref var q:int64, ref var r:int64)
	
	// terminal expected: DO, terminal found: IDENT
	do
	
		// Store q is not initialized
		// q := 0;
	
		q init := 0 + 1;
		r init := m;
		while r >= n do
			q := q + 1;
			r := r - n
		endwhile
	endproc;
	
	// unknown char @
	// @@
	
	// Routine already declared: divide
	// proc divide(copy m:int64, copy n:int64, ref var q:int64, ref var r:int64)
	// do
	//	 q init := 0
	// endproc;

	var n:int64;
	var m:int64;
	var q:int64;
	var [-8:10]x:int64;
	
	//Store already declared: x
	// var [0:10]x:int64;
	
	var r:int64
do
	debugin m init;
	debugin n init;
	
	// Ident y not declared
	// n := 4 - m + 3 + [3]y;
	
	// Index out of bound exception for array x
	// n := 4 - m + 3 + [11]x;
	// [-9]x := m + 2 * 3;
	
	n := 4 - m + 3 + [4]x;
	[-2]x := m + 2 * 3;
	
	// Ident y not declared
	// call divide(m, [5]y, q init, r init);
	
	call divide(m, [-2]x, q init, r init);
	debugout q;
	debugout r
endprogram